[{"M:\\Noteit\\src\\index.js":"1","M:\\Noteit\\src\\App.js":"2","M:\\Noteit\\src\\components\\Login.js":"3","M:\\Noteit\\src\\components\\Navbar.js":"4","M:\\Noteit\\src\\components\\About.js":"5","M:\\Noteit\\src\\components\\Alert.js":"6","M:\\Noteit\\src\\components\\Home.js":"7","M:\\Noteit\\src\\components\\Signup.js":"8","M:\\Noteit\\src\\context\\notes\\NoteState.js":"9","M:\\Noteit\\src\\components\\Notes.js":"10","M:\\Noteit\\src\\context\\notes\\noteContext.js":"11","M:\\Noteit\\src\\components\\AddNote.js":"12","M:\\Noteit\\src\\components\\Noteitem.js":"13"},{"size":267,"mtime":1705146824088,"results":"14","hashOfConfig":"15"},{"size":1286,"mtime":1705146824084,"results":"16","hashOfConfig":"15"},{"size":2022,"mtime":1705146824084,"results":"17","hashOfConfig":"15"},{"size":2098,"mtime":1705412885978,"results":"18","hashOfConfig":"15"},{"size":218,"mtime":1705146824084,"results":"19","hashOfConfig":"15"},{"size":597,"mtime":1705146824084,"results":"20","hashOfConfig":"15"},{"size":151,"mtime":1705146824084,"results":"21","hashOfConfig":"15"},{"size":2891,"mtime":1705146824088,"results":"22","hashOfConfig":"15"},{"size":2473,"mtime":1705146824088,"results":"23","hashOfConfig":"15"},{"size":4811,"mtime":1705146824088,"results":"24","hashOfConfig":"15"},{"size":109,"mtime":1705146824088,"results":"25","hashOfConfig":"15"},{"size":2143,"mtime":1705146824084,"results":"26","hashOfConfig":"15"},{"size":1052,"mtime":1705146824088,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"i190b9",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"M:\\Noteit\\src\\index.js",[],[],"M:\\Noteit\\src\\App.js",[],[],"M:\\Noteit\\src\\components\\Login.js",[],[],"M:\\Noteit\\src\\components\\Navbar.js",["70"],[],"import { Link } from \"react-router-dom\";\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\nexport const Navbar = () => {\r\n  let navigate=useNavigate();\r\n  const handleLogout=()=>{\r\n    localStorage.removeItem('token');\r\n    navigate('/login');\r\n  }\r\n  return (\r\n    <nav\r\n      className=\"navbar navbar-expand-lg navbar-dark bg-dark\"\r\n      style={{\r\n        fontFamily: \"sans-serif\",\r\n        fontFamily: \"Audiowide\",\r\n        fontWeight: \"500\",\r\n      }}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          <h3 className=\"mx-2\">NoteiT</h3>\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item active\">\r\n              <Link className=\"nav-link\" to=\"/\">\r\n                Home <span className=\"sr-only\"></span>\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          {!localStorage.getItem(\"token\") ? (\r\n            <form className=\"d-flex\">\r\n              <Link className=\"btn btn-primary mx-2\" to=\"/login\" role=\"button\">\r\n                Login\r\n              </Link>\r\n              <Link className=\"btn btn-danger mx-2\" to=\"/signup\" role=\"button\">\r\n                SignUp\r\n              </Link>\r\n            </form>\r\n          ) : (\r\n            <Link onClick={handleLogout} className=\"btn btn-warning mx-2\" to=\"/login\" role=\"button\">\r\n              LogOut\r\n            </Link>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n","M:\\Noteit\\src\\components\\About.js",["71"],[],"import { useContext } from \"react\"\r\nimport noteContext from \"../context/notes/noteContext\"\r\n\r\n\r\nexport const About = () => {\r\n  const a = useContext(noteContext);\r\n  \r\n  return (\r\n    <div>This is About</div>\r\n  )\r\n}\r\n","M:\\Noteit\\src\\components\\Alert.js",[],[],"M:\\Noteit\\src\\components\\Home.js",[],[],"M:\\Noteit\\src\\components\\Signup.js",[],[],"M:\\Noteit\\src\\context\\notes\\NoteState.js",["72","73"],[],"//localStorage.getItem('token')\r\n\r\nimport { useState } from \"react\";\r\nimport NoteContext from \"./noteContext\";\r\n\r\nconst NoteState = (props) => {\r\n  const host = \"http://localhost:5000\";\r\n  const notesInitial = [];\r\n\r\n  const [notes, setNotes] = useState(notesInitial);\r\n\r\n  //Get all Notes\r\n  const getNotes = async () => {\r\n    const response = await fetch(`${host}/api/notes/fetchallnotes`, {\r\n      method: \"GET\",\r\n\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\r\n         localStorage.getItem('token'),\r\n      },\r\n    });\r\n    const json = await response.json();\r\n    setNotes(json)\r\n  };\r\n\r\n  //Add a Note\r\n  const addNote = async (title, description, tag) => {\r\n    const response = await fetch(`${host}/api/notes/addnote`, {\r\n      method: \"POST\",\r\n\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\r\n         localStorage.getItem('token'),\r\n      },\r\n      body: JSON.stringify({title,description,tag}),\r\n    });\r\n    const note = await response.json();\r\n    setNotes(notes.concat(note));\r\n  };\r\n\r\n  //Delete a Note\r\n  const deleteNote = async(id) => {\r\n\r\n    //API CALL\r\n    const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\r\n      method: \"DELETE\",\r\n\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\r\n         localStorage.getItem('token'),\r\n      },\r\n    });\r\n    \r\n    const newNotes = notes.filter((note) => {\r\n      return note._id !== id;\r\n    });\r\n    setNotes(newNotes);\r\n  };\r\n  //Edit a Note\r\n  const editNote = async (id, title, description, tag) => {\r\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\r\n      method: \"PUT\",\r\n\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\r\n         localStorage.getItem('token'),\r\n      },\r\n      body: JSON.stringify({title,description,tag}),\r\n    });\r\n\r\n    let newNotes = JSON.parse(JSON.stringify(notes))\r\n    for (let index = 0; index < notes.length; index++) {\r\n      const element = newNotes[index];\r\n      if (element._id === id) {\r\n        newNotes[index].title = title;\r\n        newNotes[index].description = description;\r\n        newNotes[index].tag = tag;\r\n        break;\r\n      }\r\n    }\r\n    setNotes(newNotes);\r\n  };\r\n\r\n  return (\r\n    <NoteContext.Provider value={{ notes, addNote, deleteNote, editNote, getNotes }}>\r\n      {props.children}\r\n    </NoteContext.Provider>\r\n  );\r\n};\r\n\r\nexport default NoteState;\r\n","M:\\Noteit\\src\\components\\Notes.js",[],["74"],"M:\\Noteit\\src\\context\\notes\\noteContext.js",[],[],"M:\\Noteit\\src\\components\\AddNote.js",[],[],"M:\\Noteit\\src\\components\\Noteitem.js",[],[],{"ruleId":"75","severity":1,"message":"76","line":15,"column":9,"nodeType":"77","messageId":"78","endLine":15,"endColumn":19},{"ruleId":"79","severity":1,"message":"80","line":6,"column":9,"nodeType":"81","messageId":"82","endLine":6,"endColumn":10},{"ruleId":"79","severity":1,"message":"83","line":47,"column":11,"nodeType":"81","messageId":"82","endLine":47,"endColumn":19},{"ruleId":"79","severity":1,"message":"83","line":64,"column":11,"nodeType":"81","messageId":"82","endLine":64,"endColumn":19},{"ruleId":"84","severity":1,"message":"85","line":17,"column":6,"nodeType":"86","endLine":17,"endColumn":8,"suggestions":"87","suppressions":"88"},"no-dupe-keys","Duplicate key 'fontFamily'.","ObjectExpression","unexpected","no-unused-vars","'a' is assigned a value but never used.","Identifier","unusedVar","'response' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getNotes' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["89"],["90"],{"desc":"91","fix":"92"},{"kind":"93","justification":"94"},"Update the dependencies array to be: [getNotes, navigate]",{"range":"95","text":"96"},"directive","",[552,554],"[getNotes, navigate]"]